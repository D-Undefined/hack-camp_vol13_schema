openapi: "3.0.0"
info:
  version: 1.0.0
  title: hack-camp_vol13_server
  description: hack-camp_vol13 の API

tags:
  - name: user
    description: user (CRUD) API
  - name: thread
    description: threads (CRUD) API
  - name: comment
    description: comments (Create,Dlete) API
  - name: comment_vote
    description: commentに対するgood/badの投票用API
paths:

  /api/v1/user:
    post:
      summary: 新規user作成
      tags:
        - user
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userBody'
              

          
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
                
  /api/v1/user/{uid}:
    get:
      summary: ID指定での質問の取得
      tags:
        - user
      parameters:
        - name: uid
          description: user id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/uid"
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
    put:
      summary: userの更新
      tags:
        - user
      parameters:
        - name: uid
          description: user id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/uid"
      requestBody:
        required: true
        description: 更新したいデータのみ用意
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userContent'
              

          
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest" 
    
    
    
    delete:
      summary: userの削除
      description: uidで削除したいuserのuidを指定
      tags:
        - user
      parameters:
        - name: uid
          description: user id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/uid"
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest" 
                
                
                



               
               
               
  /api/v1/threads:
    post:
      summary: threadすべて取得 (取得個数制限まだかけてない)
      description: フロントかバックで取得個数の制限かけたほうが良いかも
      tags:
        - thread
        
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/threadsContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
               
               
  /api/v1/thread:
    post:
      summary: 新規thread作成
      tags:
        - thread
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threadBody'
              

          
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"                 
               
                
  /api/v1/thread/{id}:
    get:
      summary: ID指定でのthreadの取得
      tags:
        - thread
      parameters:
        - name: id
          description: thread id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/threadId"
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
                
    put:
      summary: threadの更新
      tags:
        - thread
      description: 更新したいデータのみ用意 voteなども更新できてしまうため要注意
      parameters:
        - name: id
          description: thread id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/threadId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/threadBody'
              
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
    delete:
      summary: thread削除
      description: idで削除したいthreadのidを指定
      tags:
        - thread
      parameters:
        - name: id
          description: thread id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/threadId"
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
                
                
              
              
              
              
              
              
              
              






  /api/v1/comment:
    post:
      summary: 新規comment作成
      tags:
        - comment
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commentBody'
              

          
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadContent"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"                 
               
                
  /api/v1/comment/{id}:
    delete:
      summary: comment削除
      description: idで削除したいcommentのidを指定
      tags:
        - comment
      parameters:
        - name: id
          description: comment id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/commentId"
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
                
                
                
                
                
                
                
                
                




  /api/v1/comment_vote:
    post:
      summary: 投票(good/bad)
      tags:
        - comment_vote
      description: "bodyのis_upがtrueのときgood / falseのときbad"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commentVoteBody'
              

          
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"                 
               
              
    delete:
      summary: comment削除
      description: 
        DELETEにrequestbodyかけないのでここに書く.
        POSTと同じものをbodyにいれてね.   
        URLにid埋め込むのもありかも
      tags:
        - comment_vote

      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        400:
          description: 失敗
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"








components:
  schemas:
    uid:
      type: string
      description: "user id"

    userContent:
      type: object
      properties:
        uid:
          type: string
          example: ahse436gh4uhawer
        user_name:
          type: string
          example: hoge
        image_url:
          type: string
          example: http://hogehoge.com
        bio:
          type: string
          example: pythonが大好き
        location:
          type: string
          example: ""
        twitter:
          type: string
          example: ""
        github:
          type: string
          example:  https://github.com/hoge
        url:
          type: string
          example: ""
        follow:
          type: integer
          example: 123
        follower:
          type: integer
          example: 37
        belong:
          type: string
          example: 同志社大学
        Thread: 
          type: array
          items:
            type: string
          example: [{},{},{}]
          
    userBody:
      type: object
      properties:
        uid:
          type: string
          example: a38ty89haeh
        user_name:
          type: string
          example: "hoge"
        image_url:
          type: string
          example: http://hogehoge.com
    
    threadId: 
      type: integer
      description: "thread id"
    

      
    threadBody:
      type: object
      properties:
        uid:
          type: string
          example: a38ty89haeh
        name:
          type: string
          example: "Pythonはオワコンなのか"

      
    
    threadContent:      
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Pythonはオワコンなのか"
        vote_cnt:
          type: integer
          example: 32
        vote:
          type: string
          example: null
        user_id:
          type: string
          example: ahse436gh4uhawer
        created_at:
          type: string
          example: "2022-01-21T15:53:51.18257+09:00"
        comment_cnt:
          type: integer
          example: 231
        Comments:
          type: array
          items:
            type: string
          example: [{},{},{}]
    
    threadsContent:      
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Pythonはオワコンなのか"
        vote_cnt:
          type: integer
          example: 32
        vote:
          type: string
          example: null
        user_id:
          type: string
          example: ahse436gh4uhawer
        created_at:
          type: string
          example: "2022-01-21T15:53:51.18257+09:00"
        comment_cnt:
          type: integer
          example: 231
        Comments:
          type: string
          example: null 
          
    
    commentId: 
      type: integer
      description: "comment id"
          
    commentBody:
      type: object
      properties:
        thread_id:
          type: integer
          example: 1
        uid: 
          type: string
          example: ahse436gh4uhawer
        body:
          type: string
          example: "オワコンなわけないでしょ！！"
    
    
    
    commentVoteBody:
      type: object
      properties:
        uid:
          type: string
          example: ahse436gh4uhawer
        comment_id: 
          type: integer
          example: 1
        is_up:
          type: string
          example: true
    
          
          

        
       
          

          

    DeleteResponse:
      type: object
      properties:
        message:
          type: string
          example: "ok"
    BadRequest:
      type: object
      properties:
        400:
          type: string
          example: "リクエストが不正です"